---
# Tarball download and deployment for the technology given by its username.
# Target hosts: N/A
# Vars: usern
#

- name: Download the latest technology tarball
  when: inventory_hostname in groups['local']
  block:
  - name: Download the latest Hadoop tarball
    ignore_errors: true
    when: usern == 'hadoop'
    shell: |
      file=$(wget -qO- https://archive.apache.org/dist/hadoop/core/current2/ | grep 'hadoop-[0-9\.*]' | grep '.tar.gz"' | grep -iv '\-[a-z]' | sed -e 's/.*href=//' | cut -d'"' -f2 | tr -d '/')
      wget -qO /home/ansible/roles/hadoop/files/${file} https://archive.apache.org/dist/hadoop/core/current2/${file}
      hadoop_version=$(echo ${file} | awk -F'/' '{print $NF}' | sed -e 's/\.tar\.gz//')
      #echo \''{"version": "'${hadoop_version}'", "file": "'${file}'"}'\'
      echo "${hadoop_version},${file}"
    register: res_tarball

  - name: Show registered variable
    ignore_errors: true
    debug:
      var: "{{ res_tarball.stdout }}"

  - name: Set the tarball fact
    set_fact:
      cacheable: yes
      tarball: "{{ res_tarball.stdout.split(',') }}"

  - name: Show fact variable
    ignore_errors: true
    debug:
      var: tarball

  - name: Download the latest Spark tarball
    ignore_errors: true
    when: usern == 'spark'
    shell: |
      spark_version=$(wget -qO- https://archive.apache.org/dist/spark/ | grep 'folder\.gif' | grep '[0-9]\.[0-9]*/<' | sed -e 's/.*href=//' | cut -d'"' -f2 | sort -V | tail -1)
      file=$(wget -qO- https://archive.apache.org/dist/spark/${product_version} | grep 'compressed\.gif' | grep -i 'bin-hadoop[1-9\.*]*.tgz"' | sed -e 's/.*href=//' | cut -d'"' -f2 | tr -d '/' | sort -V | tail -1)
      wget -qO /home/ansible/roles/spark/files/${file} https://archive.apache.org/dist/spark/${spark_version}${file}
      echo \''{"version": "'${spark_version}'", "tarball": "'${file}'"}'\'
    register: var_tarball

  - name: Download the latest Kafka tarball
    ignore_errors: true
    when: usern == 'kafka'
    shell: |
      kafka_version=$(wget -qO- https://archive.apache.org/dist/kafka/ | grep 'folder\.gif' | grep '[0-9]\.[0-9]*/<' | grep -iv '\-[a-z]' | sed -e 's/.*href=//' | cut -d'"' -f2 | tr -d '/' | sort -V | tail -1)
      file=$(wget -qO- https://archive.apache.org/dist/kafka/${kafka_version} | grep 'compressed\.gif' | sed 's/.*href=//' | cut -d'"' -f2 | grep -iv '\-[a-z]*.tgz' | sort -V | tail -1)
      wget -qO /home/ansible/roles/kafka/files/${file} https://archive.apache.org/dist/kafka/${kafka_version}${file}
      echo \''{"version": "'${kafka_version}'", "tarball": "'${file}'"}'\'
    register: var_tarball

  - name: Save the tarball version as a variable
    replace:
      path: "{{ role_path }}/vars/main.yml"
      regexp: '^version: (.*)$'
      replace: "version: {{ tarball[0] }}"

  - name: Save the tarball file name as a variable
    replace:
      path: "{{ role_path }}/vars/main.yml"
      regexp: '^file: (.*)$'
      replace: "file: {{ tarball[1] }}"

- name: Reload vars file
  include_vars: "{{ role_path }}/vars/main.yml"

- name: Deploy the tarball thru the cluster
  become: true
  become_user: "{{ usern }}"
  when: inventory_hostname != 'localhost'
  block:
  - name: Create target directory
    file:
      state: directory
      path: "/home/{{ usern }}/{{ version }}"
      owner: "{{ usern }}"
      group: "{{ usern }}"
      mode: '0755'

  - name: Decompress the tarball
    unarchive:
      src: "{{ file }}"
      dest: "/home/{{ usern }}/{{ version }}"
      owner: "{{ usern }}"
      group: "{{ usern }}"
      mode: '0755'
      extra_opts: [--strip-components=1]

  - name: Delete the tarball from the cluster servers
    file:
      path: "/home/{{ usern }}/{{ file }}"
      state: absent

- name: Update the /etc/profile.d user script
  become: true
  when: inventory_hostname != 'localhost'
  replace:
    path: "/etc/profile.d/{{ usern }}.sh"
    regexp: 'VERSION'
    replace: "{{ version }}"

- name: Delete the tarball from the cluster master
  when: inventory_hostname in groups['local']
  file:
    path: "{{ role_path }}/files/{{ file }}"
    state: absent

...
