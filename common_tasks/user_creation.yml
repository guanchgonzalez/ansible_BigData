---
# User and its environment creation tasks.
# Target hosts: N/A
# Vars: usern
#

- name: Generate a new encrypted user password
  become: true
  when: inventory_hostname in groups['local']
  block:
  - name: Encrypt user password with openssl
    shell: echo {{ usern }} | openssl passwd -6 -stdin
    register: uspass

  - name: Save the new encrypted password as a variable
    replace:
      path: "{{ role_path }}/vars/main.yml"
      regexp: '^username_SHA512_pass: (.*)$'
      replace: "username_SHA512_pass: {{ uspass.stdout }}"

- name: Reload vars file
  become: true
  when: inventory_hostname != 'localhost'
  include_vars: "{{ role_path }}/vars/main.yml"

- name: Create the group and the user with password
  become: true
  when: inventory_hostname != 'localhost'
  block:
  - name: Create user group
    group:
      name: "{{ usern }}"
      state: present

  - name: Create user with the same password
    user:
      name: "{{ usern }}"
      group: "{{ usern }}"
      password: "{{ username_SHA512_pass }}"
      generate_ssh_key: yes

- name: Deploy SSH keys relationships on every cluster node
  become: true
  become_user: "{{ usern }}"
  when: inventory_hostname != 'localhost'
  block:
  - name: Create user authorized_keys file and grant read permissions to both id_rsa.pub and authorized_keys files
    file:
      path: "{{ item }}"
      state: touch
      mode: '0644'
      modification_time: preserve
      access_time: preserve
    with_items:
      - "/home/{{ usern }}/.ssh/id_rsa.pub"
      - "/home/{{ usern }}/.ssh/authorized_keys"
      - "/home/{{ usern }}/.ssh/known_hosts"

  - name: Create the .ssh config file
    copy:
      dest: "/home/{{ usern }}/.ssh/config"
      content: StrictHostKeyChecking no
      owner: "{{ usern }}"
      group: "{{ usern }}"
      mode: '0644'

  - name: Include the user public key into its authorized_keys file
    ignore_errors: true
    shell: |
      encr=$(awk '{print $2}' /home/{{ usern }}/.ssh/id_rsa.pub)
      grep ${encr} /home/{{ usern }}/.ssh/authorized_keys
      [[ $? -ne 0 ]] && cat /home/{{ usern }}/.ssh/id_rsa.pub >> /home/{{ usern }}/.ssh/authorized_keys

- name: Enable SSH login to remote users
  become: true
  when: inventory_hostname != 'localhost'
  shell: |
    grep AllowUsers /etc/ssh/sshd_config | grep "{{ usern }}"
    if [ $? -ne 0 ]
    then
      line=$(grep AllowUsers /etc/ssh/sshd_config 2>/dev/null)
      line=${line}" "{{ usern }}
      sed -i "s/AllowUsers.*$/${line}/" /etc/ssh/sshd_config
    fi

- name: Restart SSH service
  become: true
  when: inventory_hostname != 'localhost'
  service:
    name: sshd
    state: restarted

- name: Deploy the user profile.d shell script
  become: true
  when: inventory_hostname != 'localhost'
  copy:
    dest: /etc/profile.d/{{ usern }}.sh
    owner: root
    group: root
    mode: '0644'
    content: |
      export {{ usern | upper }}_HOME=/home/{{ usern }}
      export PATH={{ '${' }}{{ usern | upper }}_HOME{{ '}' }}/VERSION/bin{{ ':${' }}{{ usern | upper }}_HOME{{ '}' }}/VERSION/sbin{{ ':${' }}{{ usern | upper }}_HOME{{ '}/bin:${' }}PATH{{ '}' }}

...
