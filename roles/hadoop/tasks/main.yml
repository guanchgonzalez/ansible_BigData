---
# Deploy the Hadoop infraestucture on every Hadoop node.
# Target hosts: namenode, datanode
#

- name: Include common deployment tasks for Hadoop infraestructure
  include_tasks: "{{ playbook_dir }}/common_tasks/main.yml"

- name: Get Memory facts in MB
  when: inventory_hostname != 'localhost'
  block:
  - name: Get all memory related facts
    setup:
      filter: 'ansible_*_mb'

  - name: Show all collected facts
    debug:
      var: ansible_facts

- name: Reload vars file
  become: true
  become_user: "{{ username }}"
  when: inventory_hostname != 'localhost'
  include_vars: "{{ role_path }}/vars/main.yml"

- name: Include common and HDFS config tasks for Hadoop framework deployment
  include_tasks: "{{ role_path }}/tasks/hdfs_config.yml"

- name: Include YARN config tasks for Hadoop framework deployment
  include_tasks: "{{ role_path }}/tasks/yarn_config.yml"

- name: Include MapReduce config tasks for Hadoop framework deployment
  include_tasks: "{{ role_path }}/tasks/mapred_config.yml"

- name: Include files creation tasks for Hadoop framework deployment
  include_tasks: "{{ role_path }}/tasks/nodes_files.yml"

- name: Formating HDFS filesystems, starting Hadoop cluster daemons and deploying MapReduce files in the Namenode
  become: true
  become_user: "{{ username }}"
  when: inventory_hostname in groups['namenode']
  block:
  - name: Format Namenode HDFS
    shell: |
      . ~/.bash_profile
      hdfs namenode -format -clusterid {{ clusterid }}

  - name: Start Hadoop cluster daemons
    shell: |
      . ~/.bash_profile
      start-dfs.sh

  - name: Stop Hadoop cluster daemons
    shell: |
      . ~/.bash_profile
      stop-dfs.sh

  - name: Start again Hadoop cluster daemons
    shell: |
      . ~/.bash_profile
      start-dfs.sh

  - name: Start Yarn daemons
    shell: |
      . ~/.bash_profile
      start-yarn.sh

  - name: Deploy MapReduce files keeping its permissions (Ansible copy don't keep it)
    ansible.posix.synchronize:
      src: files/MapReduce/
      dest: "/home/{{ username }}"

- name: Changing owner and group of deployed files and fixing original HOME permissions
  become: true
  when: inventory_hostname in groups['namenode']
  block:
  - name: Change owner and group of deployed files
    file:
      path: "/home/{{ username }}"
      owner: "{{ username }}"
      group: "{{ username }}"
      state: directory
      recurse: yes

  - name: Fix original HOME permissions
    file:
      path: "/home/{{ username }}"
      state: directory
      mode: '0700'

...
